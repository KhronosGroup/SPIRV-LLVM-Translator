language: cpp

os:
  - linux

# Use Ubuntu 14.04 LTS (Trusty) as the Linux testing environment.
dist: trusty
sudo: false

git:
  depth: 1

addons:
  apt:
    sources:
    # adds deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty main
    - llvm-toolchain-trusty
    - ubuntu-toolchain-r-test
    packages:
    - llvm-7-tools
    - llvm-7-dev

compiler:
  - gcc
  - clang

env:
  global:
    - MAKEFLAGS="-j2"
  matrix:
    - BUILD_TYPE=Release BUILD_EXTERNAL=1 MAKE_TARGETS=""           MAKE_TEST_TARGET="test"
    - BUILD_TYPE=Debug   BUILD_EXTERNAL=1 MAKE_TARGETS=""           MAKE_TEST_TARGET="test"
    - BUILD_TYPE=Release BUILD_EXTERNAL=0 MAKE_TARGETS="llvm-spirv" MAKE_TEST_TARGET="check-llvm-spirv"
    - BUILD_TYPE=Debug   BUILD_EXTERNAL=0 MAKE_TARGETS="llvm-spirv" MAKE_TEST_TARGET="check-llvm-spirv"
  # some bug inside clang-5.0.0, works with 5.0.1

matrix:
  include:
    - os: osx
      env: BUILD_TYPE=Release BUILD_EXTERNAL=0 MAKE_TARGETS="llvm-spirv" MAKE_TEST_TARGET="check-llvm-spirv"
      osx_image: xcode9.3

    - os: osx
      env: BUILD_TYPE=Debug BUILD_EXTERNAL=0 MAKE_TARGETS="llvm-spirv" MAKE_TEST_TARGET="check-llvm-spirv"
      osx_image: xcode9.3
  allow_failures:
    - compiler: clang
    - os: osx
  fast_finish: true

script:
  - |
    if [ $BUILD_EXTERNAL == "0" ]; then
      mkdir llvm-spirv
      mv * llvm-spirv
      git clone https://git.llvm.org/git/llvm.git/ --depth 1
      mv llvm-spirv llvm/tools/llvm-spirv
    fi
  - mkdir build && cd build
  - |
    if [ $BUILD_EXTERNAL == "1" ]; then
      cmake .. \
        -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
        -DLLVM_BUILD_TOOLS=ON \
        -DLLVM_EXTERNAL_LIT="/usr/lib/llvm-7/build/utils/lit/lit.py" \
        -DLLVM_INCLUDE_TESTS=ON \
        -DCMAKE_INSTALL_PREFIX=../install/ \
        -G "Unix Makefiles"
    else
      cmake ../llvm/ \
        -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
        -DLLVM_BUILD_TOOLS=ON \
        -DLLVM_BUILD_TESTS=ON \
        -DLLVM_INCLUDE_TESTS=ON \
        -DLLVM_LIT_ARGS="-sv --no-progress-bar" \
        -G "Unix Makefiles"
    fi
  - make $MAKE_TARGETS && make $MAKE_TEST_TARGET && if [ $BUILD_EXTERNAL == "1" ]; then make install; fi
